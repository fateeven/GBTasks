// Программа, которая заполнит спирально двумерный массив 4 на 4
using System;
using static System.Console;

Clear();
Write("Введите размер матрицы через пробел: ");
string[] size = ReadLine().Split(" ", StringSplitOptions.RemoveEmptyEntries);

int[,] array = GetATwoDimensionalArray(int.Parse(size[0]), int.Parse(size[1]));
PrintATwoDimensionalArrey(array);





//Метод формирования двумерного массива, с учетом условий задачи - построить спиральное заполнение
int[,] GetATwoDimensionalArray(int rows, int columns)
{
    int[,] result = new int[rows, columns];
    int i = 0;                       // считывает номер строки, 
    int j = 0;                       // и считывает номер столбца, мы будем запалнять массив этими значениями
    int rowEnd = rows - 1;           //определяем крайний размер строки
    int columnEnd = columns - 1;     //определяем последний столбец
    int rowStart = 0;                //определяем начало строки
    int columnStart = 0;             //определяем начальный столбец

    bool left = true;                 //определяет метсоположение слева или справа.
    bool top = true;                  //определяет метсоположение снизу или сверху, начинае с лева и с верху, поэтому данные переменные уже = true
    int count = 0;                    //поможет заполнить массив

    while (count < rows * columns)    //заполнятся массив будет пока count меньше кол-ва элемента нашего массива
    {
        count++;                      //увеличиваем count на еденицу и записываем ее 
        result[i, j] = count;         //в значение массива. 
        //идем вправо
        if (left && top)
        {   //если мы достигли значения последнего столбца
            if (j == columnEnd)
            {   //тогда нам надо двигаться в низ
                rowStart++;    //при этомт мы заполнили верхнюю строку
                top = true;    //мы все еще на верху
                left = false;  //но мы уже находимся с права.
                i++;           //перешагиваем на новую строку
                continue;      //возвращаемся в начало цикла.
            }
            else               // пока мы двигаемся по верхней строке
            {
                j++;           //мы увиличиваем номер столбца
                continue;      //принудительно идем на вверх цикла и шагаем до тех пор пока не дойдем до последнего столбца
            }
        }

        //идем вниз
        if (!left && top)
        {   // сначала так же проверяем, достигли ли мы значения последней строки
            if (i == rowEnd)
            {
                columnEnd--;  //заполнили столбец и уменьшаем на еденицу
                top = false;  //мы переместились вниз
                left = false; //все еще находимся с права
                j--;          // подвинимся на одну ячейку левее
                continue;     //и вернемся в начало цикла
            }
            else              //двигаемся мы до тех пор пока не достигнем правой строки
            {
                i++;          //для этого увеличиваем номер строки
                continue;     //принудительно идем на вверх цикла и шагаем до тех пор пока не дойдем до последней строки.
            }
        }
        //идем справа на лево, по нижней строке
        if (!left && !top)
        {   // сначала так же проверяем, достигли ли мы значения первого столбца
            if (j == columnStart)
            {
                rowEnd--;     //заполнилась нижняя строка, убовляем ее на еденицу
                top = false;
                left = true;
                i--;          //поднимимся на одну строчку вверх
                continue;     //вернемся в начало цикла
            }
            else
            {                 //двигаемся до тех пор пока не достигли значения первого столбца
                j--;          //для этого уменьшаем значение(отнимаем по одному столбцу каждый шаг) столбца
                continue;     //и возвращаемся в начало цикла
            }
        }
        //идем вверх
        if (left && !top)
        {   // сначала так же проверяем, достигли ли мы значения первой строки
            if (i == rowStart)
            {
                columnStart++; //считаем что столбец заполнили
                top = true;
                left = true;
                j++;
                continue;
            }
            else
            {
                i--;           //двигаемся вверх по сатроке
                continue;
            }
        }
    }
    return result;
}

//Метод Void печати двумерного массива 
void PrintATwoDimensionalArrey(int[,] inArray)
{
    for (int i = 0; i < inArray.GetLength(0); i++)
    {
        for (int j = 0; j < inArray.GetLength(1); j++)
        {
            Write($"{inArray[i, j]}\t ");                     // \t - это команда по табуляции вывода, можно ставить слева или справа от {} 
        }
        WriteLine();                                        // не забываем пробелs для строк и стобцов           
    }
}